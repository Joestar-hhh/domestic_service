<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cykj.domestic.mapper.CompanyMapper">


    <!--    登入-->
    <select id="companyLogin" parameterType="com.cykj.domestic.entity.Company"
            resultType="com.cykj.domestic.entity.Company">
             SELECT * FROM tb_company WHERE account=#{account}
    </select>

    <!--    查询最大账号-->
    <select id="MaxAccount" resultType="java.lang.String">
        SELECT MAX(account) from tb_company where role_id=2
    </select>

    <!--    家政公司根据手机号码查询-->
    <select id="querycompanyphone" parameterType="com.cykj.domestic.entity.Company"
            resultType="com.cykj.domestic.entity.Company">
              select * from tb_company where phone=#{phone}
    </select>

    <!--    家政公司端修改密码-->
    <update id="phone_update_pwd" parameterType="com.cykj.domestic.entity.Company">
               UPDATE tb_company SET pwd=#{pwd} WHERE phone=#{phone}
    </update>

    <!--家政公司注册-->
    <insert id="insertCompany" parameterType="com.cykj.domestic.entity.Company">
        INSERT INTO tb_company(account,pwd,company_name,boss,phone,role_id)
        VALUES(#{account},#{pwd},#{companyName},#{boss},#{phone},'2')
    </insert>

    <!--    平台端区域列表-->
    <select id="queryRegion" parameterType="com.cykj.domestic.entity.Company"
            resultType="com.cykj.domestic.entity.Company">
             SELECT B.region region,COUNT(A.region_id)regioncount,B.id regionId,MAX(A.join_time)joinTime
             FROM tb_region B LEFT JOIN tb_company A on A.region_id =B.id GROUP BY B.id LIMIT #{start},#{pageSize};
    </select>

    <!--    统计列表总数-->
    <select id="RegionCount" resultType="int" parameterType="com.cykj.domestic.entity.Company">
        select count(D.C) from
             (SELECT B.region,COUNT(*)C
                  FROM tb_region B LEFT JOIN tb_company A on A.region_id =B.id GROUP BY B.id)D;
    </select>

    <!--    查询平台所有服务区域-->
    <select id="queryregionList" parameterType="com.cykj.domestic.entity.Company"
            resultType="com.cykj.domestic.entity.Company">
             select * from tb_region
        </select>

    <!--    删除区域-->
    <delete id="deleteRegion" parameterType="java.lang.String">
          DELETE FROM tb_region WHERE region=#{region}
    </delete>
    <!--    查询区域是否 存在-->
    <select id="selectRegionPresence" parameterType="java.lang.String" resultType="com.cykj.domestic.entity.Region">
           SELECT * FROM tb_region WHERE region=#{region}
    </select>

    <!--    添加区域-->
    <insert id="insertRegion" parameterType="java.lang.String">
         INSERT INTO tb_region(region)VALUES(#{region})
    </insert>

    <!--    根据地区查看平台详情-->
    <select id="queryRegionCompany" parameterType="java.lang.String" resultType="com.cykj.domestic.entity.Company">
        SELECT * FROM tb_company WHERE region_id=#{regionId}
    </select>

    <!--    服务类型数量统计-->
    <select id="serviceTypeStatistics" parameterType="java.lang.String" resultType="com.cykj.domestic.entity.Company">
        select st.type_name,count(c.service_relation_id) count_num from tb_service_type st
        left join tb_company c on st.id = c.service_relation_id
        group by st.id
    </select>
    <!--    区域数量统计-->
    <select id="regionStatistics" parameterType="java.lang.String" resultType="com.cykj.domestic.entity.Company">
        select r.region,count(c.region_id) count_num from tb_region r
        left join tb_company c on r.id = c.region_id
        group by r.id
    </select>

    <!--    公司申请添加地区和口号-->
    <update id="insertregionId" parameterType="java.lang.String">
        update tb_company set region_id=#{regionId},company_profile=#{companyProfile},address=#{address} ,head=#{head}, state="未审核" where id=#{id}
    </update>

    <!--    按日期统计-->
    <select id="dateStatistics" parameterType="java.lang.String" resultType="com.cykj.domestic.entity.Company">
        select date(c.join_time) as join_day,count(c.id) count_num from tb_company c
        where c.join_time between date_format(#{startDate},'%Y%m%d')
        and date_format(#{endDate},'%Y%m%d') group by join_day;
    </select>

    <!--    微信模糊搜索公司或者服务-->
    <select id="wxSearchCompany" resultType="com.cykj.domestic.entity.Company">
        SELECT distinct t.type_name,c.*,onum.count_num from tb_company c
        left join tb_service_relation sr on sr.company_id = c.id
        left join tb_service_type st on st.id = sr.service_type_id
        left join tb_service s on s.service_type_id = st.id
        left join (select c.id cid,GROUP_CONCAT(st.type_name separator'、') type_name from tb_company c
        left join tb_service_relation sr on c.id = sr.company_id
        left join tb_service_type st on sr.service_type_id = st.id
        group by c.id) t on t.cid = c.id
        left join (select c.id,count(c.id) count_num from tb_order_info o
        left join tb_company c on c.id = o.company_id
        where o.company_order_state_id = 4 group by c.id) onum on onum.id = c.id
        <where>
            and c.company_name is not null and c.state='审核通过'
            <if test="search!=null and search!=''">
                and st.type_name like concat('%',#{search},'%')
                or s.type_name LIKE concat('%',#{search},'%')
                or c.company_name LIKE CONCAT('%',#{search},'%')
            </if>
        </where>
        LIMIT #{start},#{pageSize}
    </select>

    <select id="wxSearchCompanyCount" resultType="int">
        SELECT count(distinct c.id) from tb_company c
        left join tb_service_relation sr on sr.company_id = c.id
        left join tb_service_type st on st.id = sr.service_type_id
        left join tb_service s on s.service_type_id = st.id
        left join (select c.id cid,GROUP_CONCAT(st.type_name separator'、') type_name from tb_company c
        left join tb_service_relation sr on c.id = sr.company_id
        left join tb_service_type st on sr.service_type_id = st.id
        group by c.id) t on t.cid = c.id
        left join (select c.id,count(c.id) count_num from tb_order_info o
        left join tb_company c on c.id = o.company_id
        where o.company_order_state_id = 4 group by c.id) onum on onum.id = c.id
        <where>
            and c.company_name is not null and c.state='审核通过'
            <if test="search!=null and search!=''">
                and st.type_name like concat('%',#{search},'%')
                or s.type_name LIKE concat('%',#{search},'%')
                or c.company_name LIKE CONCAT('%',#{search},'%')
            </if>
        </where>
    </select>
</mapper>